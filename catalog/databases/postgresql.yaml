header:
  id: database-postgresql
  name: PostgreSQL Database
  description: Provision a managed PostgreSQL database instance
  version: 1.0.0
  category: databases
  owner: platform-data-team
  tags:
    - postgresql
    - relational
    - sql
  sla:
    provisioning_time: 4 hours
    support_level: tier-1

presentation:
  groups:
    - id: basic
      name: Basic Configuration
      description: Essential database settings
      order: 1
      collapsible: false
      fields:
        - id: database_name
          name: Database Name
          description: Name for your database (lowercase, alphanumeric, underscores only)
          type: string
          order: 1
          required: true
          validation:
            pattern: "^[a-z][a-z0-9_]{2,28}[a-z0-9]$"
            min: 4
            max: 30
            
        - id: environment
          name: Environment
          description: Deployment environment
          type: selection
          order: 2
          required: true
          validation:
            enum:
              - development
              - staging
              - production
          default: development
          
        - id: postgres_version
          name: PostgreSQL Version
          description: PostgreSQL engine version
          type: selection
          order: 3
          required: true
          validation:
            enum:
              - "13.11"
              - "14.8"
              - "15.3"
          default: "15.3"

    - id: sizing
      name: Instance Sizing
      description: Database instance specifications
      order: 2
      collapsible: false
      fields:
        - id: instance_class
          name: Instance Class
          description: Database instance type based on environment
          type: selection
          order: 1
          required: true
          validation:
            enum:
              - db.t3.micro
              - db.t3.small
              - db.t3.medium
              - db.m5.large
              - db.m5.xlarge
              - db.m5.2xlarge
          default: db.t3.small
          conditional:
            field: environment
            operator: eq
            value: development
            
        - id: storage_size
          name: Storage Size (GB)
          description: Allocated storage in gigabytes
          type: integer
          order: 2
          required: true
          default: 20
          validation:
            min: 20
            max: 1000
            
        - id: storage_type
          name: Storage Type
          description: Storage performance tier
          type: selection
          order: 3
          required: true
          validation:
            enum:
              - gp3
              - io1
          default: gp3

    - id: high_availability
      name: High Availability
      description: Backup and replication settings
      order: 3
      collapsible: true
      fields:
        - id: multi_az
          name: Multi-AZ Deployment
          description: Enable automatic failover to standby instance
          type: boolean
          order: 1
          required: false
          default: false
          conditional:
            field: environment
            operator: in
            value: [staging, production]
            
        - id: backup_retention
          name: Backup Retention (days)
          description: Number of days to retain automated backups
          type: integer
          order: 2
          required: true
          default: 7
          validation:
            min: 1
            max: 35
            
        - id: backup_window
          name: Backup Window
          description: Preferred backup window (UTC)
          type: selection
          order: 3
          required: false
          validation:
            enum:
              - "03:00-04:00"
              - "04:00-05:00"
              - "05:00-06:00"
              - "06:00-07:00"
          default: "05:00-06:00"

    - id: security
      name: Security Configuration
      description: Access control and encryption
      order: 4
      collapsible: true
      fields:
        - id: vpc_id
          name: VPC ID
          description: VPC for database deployment
          type: string
          order: 1
          required: true
          validation:
            pattern: "^vpc-[a-z0-9]+$"
            
        - id: subnet_group
          name: Subnet Group
          description: Database subnet group name
          type: string
          order: 2
          required: true
          default: "default-db-subnet-group"
          
        - id: security_group_ids
          name: Security Group IDs
          description: Comma-separated list of security group IDs
          type: string
          order: 3
          required: false
          validation:
            pattern: "^(sg-[a-z0-9]+(,sg-[a-z0-9]+)*)?$"
            
        - id: encryption_enabled
          name: Enable Encryption
          description: Enable encryption at rest
          type: boolean
          order: 4
          required: false
          default: true

    - id: access
      name: Access Configuration
      description: Database credentials and connection settings
      order: 5
      collapsible: false
      fields:
        - id: master_username
          name: Master Username
          description: Master database username
          type: string
          order: 1
          required: true
          default: dbadmin
          validation:
            pattern: "^[a-z][a-z0-9_]{2,15}$"
            
        - id: parameter_group
          name: Parameter Group
          description: Custom parameter group name (optional)
          type: string
          order: 2
          required: false

fulfillment:
  manual:
    description: Manual database provisioning via platform team
    actions:
      - type: jira-ticket
        config:
          project: DATA
          issue_type: Task
          summary_template: "Provision PostgreSQL: {{fields.database_name}} in {{fields.environment}}"
          description_template: |
            Please provision a PostgreSQL database with the following specifications:
            
            ## Database Configuration
            - Database Name: {{fields.database_name}}
            - Environment: {{fields.environment}}
            - PostgreSQL Version: {{fields.postgres_version}}
            
            ## Instance Specifications
            - Instance Class: {{fields.instance_class}}
            - Storage Size: {{fields.storage_size}} GB
            - Storage Type: {{fields.storage_type}}
            
            ## High Availability
            - Multi-AZ: {{fields.multi_az}}
            - Backup Retention: {{fields.backup_retention}} days
            - Backup Window: {{fields.backup_window}}
            
            ## Security
            - VPC ID: {{fields.vpc_id}}
            - Subnet Group: {{fields.subnet_group}}
            - Security Groups: {{fields.security_group_ids}}
            - Encryption: {{fields.encryption_enabled}}
            
            ## Access
            - Master Username: {{fields.master_username}}
            - Parameter Group: {{fields.parameter_group}}
            
            Request ID: {{request.id}}
            Requested by: {{request.user}}
            Timestamp: {{request.timestamp}}
          labels:
            - database-provisioning
            - postgresql
            - "env-{{fields.environment}}"
          assignee: data-team-oncall

  automatic:
    actions:
      - type: rest-api
        config:
          method: POST
          url: "https://api.platform.company.com/v1/databases/validate"
          headers:
            Content-Type: application/json
            X-Request-ID: "{{request.id}}"
          body_template: |
            {
              "name": "{{fields.database_name}}",
              "environment": "{{fields.environment}}",
              "engine": "postgres",
              "version": "{{fields.postgres_version}}"
            }
          success_codes: [200]
        retry:
          attempts: 3
          delay: 5
          
      - type: terraform
        config:
          repository: platform-infrastructure
          branch: main
          path: "environments/{{fields.environment}}/databases"
          module: aws-rds-postgresql
          variables:
            identifier: "{{fields.database_name}}-{{fields.environment}}"
            engine_version: "{{fields.postgres_version}}"
            instance_class: "{{fields.instance_class}}"
            allocated_storage: "{{fields.storage_size}}"
            storage_type: "{{fields.storage_type}}"
            multi_az: "{{fields.multi_az}}"
            backup_retention_period: "{{fields.backup_retention}}"
            backup_window: "{{fields.backup_window}}"
            vpc_id: "{{fields.vpc_id}}"
            subnet_group_name: "{{fields.subnet_group}}"
            security_group_ids: "{{fields.security_group_ids}}"
            storage_encrypted: "{{fields.encryption_enabled}}"
            master_username: "{{fields.master_username}}"
            parameter_group_name: "{{fields.parameter_group}}"
            tags:
              Name: "{{fields.database_name}}"
              Environment: "{{fields.environment}}"
              ManagedBy: "platform-orchestrator"
              RequestID: "{{request.id}}"
        rollback:
          type: terraform
          config:
            repository: platform-infrastructure
            branch: main
            path: "environments/{{fields.environment}}/databases"
            module: aws-rds-postgresql
            variables:
              action: destroy
              identifier: "{{fields.database_name}}-{{fields.environment}}"
              
      - type: rest-api
        config:
          method: POST
          url: "https://vault.platform.company.com/v1/secret/data/databases/{{fields.environment}}/{{fields.database_name}}"
          headers:
            Content-Type: application/json
            X-Vault-Token: "${VAULT_TOKEN}"
          body_template: |
            {
              "data": {
                "username": "{{fields.master_username}}",
                "endpoint": "{{response.terraform.outputs.endpoint}}",
                "port": "{{response.terraform.outputs.port}}",
                "database": "{{fields.database_name}}"
              }
            }
          success_codes: [200, 204]
          
      - type: webhook
        config:
          url: "https://hooks.monitoring.company.com/databases"
          method: POST
          headers:
            Content-Type: application/json
          body_template: |
            {
              "database": "{{fields.database_name}}",
              "environment": "{{fields.environment}}",
              "engine": "postgresql",
              "version": "{{fields.postgres_version}}",
              "action": "provisioned",
              "request_id": "{{request.id}}"
            }