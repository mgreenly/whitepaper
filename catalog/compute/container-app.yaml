header:
  id: compute-container-app
  name: Container Application
  description: Deploy a containerized application to our Kubernetes platform
  version: 1.0.0
  category: compute
  owner: platform-compute-team
  tags:
    - container
    - kubernetes
    - microservice
  sla:
    provisioning_time: 2 hours
    support_level: tier-1

presentation:
  groups:
    - id: basic
      name: Basic Configuration
      description: Essential application settings
      order: 1
      collapsible: false
      fields:
        - id: app_name
          name: Application Name
          description: Unique name for your application (lowercase, alphanumeric, hyphens only)
          type: string
          order: 1
          required: true
          validation:
            pattern: "^[a-z][a-z0-9-]{2,28}[a-z0-9]$"
            min: 4
            max: 30
            
        - id: environment
          name: Environment
          description: Deployment environment
          type: selection
          order: 2
          required: true
          validation:
            enum:
              - development
              - staging
              - production
          default: development
          
        - id: container_image
          name: Container Image
          description: Full container image path (e.g., registry.company.com/app:v1.0.0)
          type: string
          order: 3
          required: true
          validation:
            pattern: "^[a-z0-9-./:]+(:[a-z0-9.-]+)?$"

    - id: resources
      name: Resource Configuration
      description: CPU and memory allocation
      order: 2
      collapsible: false
      fields:
        - id: cpu_request
          name: CPU Request
          description: Minimum CPU cores (0.1 to 4)
          type: number
          order: 1
          required: true
          default: 0.5
          validation:
            min: 0.1
            max: 4
            
        - id: memory_request
          name: Memory Request
          description: Minimum memory in GB (0.5 to 16)
          type: number
          order: 2
          required: true
          default: 1
          validation:
            min: 0.5
            max: 16
            
        - id: replicas
          name: Initial Replicas
          description: Number of initial pod replicas
          type: integer
          order: 3
          required: true
          default: 2
          validation:
            min: 1
            max: 10

    - id: networking
      name: Networking
      description: Network configuration
      order: 3
      collapsible: true
      fields:
        - id: expose_service
          name: Expose Service
          description: Make service accessible outside the cluster
          type: boolean
          order: 1
          required: false
          default: false
          
        - id: port
          name: Container Port
          description: Port your application listens on
          type: integer
          order: 2
          required: true
          default: 8080
          validation:
            min: 1
            max: 65535
          conditional:
            field: expose_service
            operator: eq
            value: true
            
        - id: health_check_path
          name: Health Check Path
          description: HTTP path for health checks (e.g., /health)
          type: string
          order: 3
          required: false
          default: /health
          conditional:
            field: expose_service
            operator: eq
            value: true

    - id: advanced
      name: Advanced Settings
      description: Optional advanced configuration
      order: 4
      collapsible: true
      fields:
        - id: enable_autoscaling
          name: Enable Auto-scaling
          description: Automatically scale based on CPU usage
          type: boolean
          order: 1
          required: false
          default: false
          
        - id: max_replicas
          name: Maximum Replicas
          description: Maximum number of replicas when auto-scaling
          type: integer
          order: 2
          required: false
          default: 10
          validation:
            min: 2
            max: 50
          conditional:
            field: enable_autoscaling
            operator: eq
            value: true
            
        - id: environment_variables
          name: Environment Variables
          description: Environment variables in JSON format {"KEY": "value"}
          type: json
          order: 3
          required: false
          default: {}

fulfillment:
  manual:
    description: Manual provisioning via platform team
    actions:
      - type: jira-ticket
        config:
          project: PLATFORM
          issue_type: Task
          summary_template: "Deploy Container App: {{fields.app_name}} to {{fields.environment}}"
          description_template: |
            Please provision a new container application with the following specifications:
            
            ## Application Details
            - Name: {{fields.app_name}}
            - Environment: {{fields.environment}}
            - Container Image: {{fields.container_image}}
            
            ## Resources
            - CPU Request: {{fields.cpu_request}} cores
            - Memory Request: {{fields.memory_request}} GB
            - Initial Replicas: {{fields.replicas}}
            
            ## Networking
            - Expose Service: {{fields.expose_service}}
            - Container Port: {{fields.port}}
            - Health Check Path: {{fields.health_check_path}}
            
            ## Advanced
            - Auto-scaling Enabled: {{fields.enable_autoscaling}}
            - Max Replicas: {{fields.max_replicas}}
            - Environment Variables: {{fields.environment_variables}}
            
            Request ID: {{request.id}}
            Requested by: {{request.user}}
            Timestamp: {{request.timestamp}}
          labels:
            - container-deployment
            - "env-{{fields.environment}}"
          assignee: platform-compute-oncall

  automatic:
    actions:
      - type: rest-api
        config:
          method: POST
          url: "https://api.platform.company.com/v1/namespaces/{{fields.environment}}/validate"
          headers:
            Content-Type: application/json
            X-Request-ID: "{{request.id}}"
          body_template: |
            {
              "name": "{{fields.app_name}}",
              "type": "container"
            }
          success_codes: [200, 201]
        retry:
          attempts: 3
          delay: 5
          
      - type: terraform
        config:
          repository: platform-infrastructure
          branch: main
          path: "environments/{{fields.environment}}/apps"
          module: kubernetes-deployment
          variables:
            name: "{{fields.app_name}}"
            namespace: "{{fields.environment}}"
            image: "{{fields.container_image}}"
            replicas: "{{fields.replicas}}"
            cpu_request: "{{fields.cpu_request}}"
            memory_request: "{{fields.memory_request}}Gi"
            port: "{{fields.port}}"
            expose_service: "{{fields.expose_service}}"
            health_check_path: "{{fields.health_check_path}}"
            enable_autoscaling: "{{fields.enable_autoscaling}}"
            max_replicas: "{{fields.max_replicas}}"
            environment_variables: "{{fields.environment_variables}}"
        rollback:
          type: terraform
          config:
            repository: platform-infrastructure
            branch: main
            path: "environments/{{fields.environment}}/apps"
            module: kubernetes-deployment
            variables:
              action: destroy
              name: "{{fields.app_name}}"
              namespace: "{{fields.environment}}"
              
      - type: webhook
        config:
          url: "https://hooks.monitoring.company.com/deployments"
          method: POST
          headers:
            Content-Type: application/json
          body_template: |
            {
              "service": "{{fields.app_name}}",
              "environment": "{{fields.environment}}",
              "action": "deployed",
              "request_id": "{{request.id}}"
            }